--- a/net/optifine/util/LinkedListTest.java
+++ b/net/optifine/util/LinkedListTest.java
@@ -1,6 +1,7 @@
 package net.optifine.util;
 
 import java.util.ArrayList;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
 import net.optifine.render.VboRange;
@@ -63,18 +64,17 @@
    }
 
    private static void dbgLinkedList(LinkedList<VboRange> linkedList) {
-      StringBuffer stringbuffer = new StringBuffer();
-
-      for(LinkedList.Node<VboRange> node : linkedList) {
-         VboRange vborange = node.getItem();
-         if (stringbuffer.length() > 0) {
-            stringbuffer.append(", ");
+      StringBuffer sb = new StringBuffer();
+      Iterator<LinkedList.Node<VboRange>> it = linkedList.iterator();
+      while (it.hasNext()) {
+         LinkedList.Node<VboRange> node = it.next();
+         VboRange range = node.getItem();
+         if (sb.length() > 0) {
+            sb.append(", ");
          }
-
-         stringbuffer.append(vborange.getPosition());
+         sb.append(range.getPosition());
       }
-
-      dbg("List: " + stringbuffer);
+      LinkedListTest.dbg("List: " + sb);
    }
 
    private static void checkLinkedList(LinkedList<VboRange> linkedList, int used) {
