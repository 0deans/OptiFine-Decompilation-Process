--- a/net/optifine/util/ArrayUtils.java
+++ b/net/optifine/util/ArrayUtils.java
@@ -65,7 +65,7 @@
       } else {
          int i = arr.length;
          int j = i + objs.length;
-         Object[] aobject = Array.newInstance(arr.getClass().getComponentType(), j);
+         Object[] aobject = (Object[]) Array.newInstance(arr.getClass().getComponentType(), j);
          System.arraycopy(arr, 0, aobject, 0, i);
          System.arraycopy(objs, 0, aobject, i, objs.length);
          return aobject;
@@ -78,7 +78,7 @@
       } else {
          int i = arr.length;
          int j = i + 1;
-         Object[] aobject = Array.newInstance(arr.getClass().getComponentType(), j);
+         Object[] aobject = (Object[]) Array.newInstance(arr.getClass().getComponentType(), j);
          System.arraycopy(arr, 0, aobject, 0, i);
          aobject[i] = obj;
          return aobject;
@@ -88,7 +88,7 @@
    public static Object[] addObjectToArray(Object[] arr, Object obj, int index) {
       List list = new ArrayList<>(Arrays.asList(arr));
       list.add(index, obj);
-      Object[] aobject = Array.newInstance(arr.getClass().getComponentType(), list.size());
+      Object[] aobject = (Object[]) Array.newInstance(arr.getClass().getComponentType(), list.size());
       return list.toArray(aobject);
    }
 
@@ -240,7 +240,7 @@
       } else if (elementClass.isPrimitive()) {
          throw new IllegalArgumentException("Can not make arrays with primitive elements (int, double), element class: " + elementClass);
       } else {
-         Object[] aobject = Array.newInstance(elementClass, coll.size());
+         Object[] aobject = (Object[]) Array.newInstance(elementClass, coll.size());
          return coll.toArray(aobject);
       }
    }
@@ -344,7 +344,7 @@
    }
 
    public static Object[] newObject(int len, Object val) {
-      Object[] aobject = Array.newInstance(val.getClass(), len);
+      Object[] aobject = (Object[]) Array.newInstance(val.getClass(), len);
       Arrays.fill(aobject, val);
       return aobject;
    }
