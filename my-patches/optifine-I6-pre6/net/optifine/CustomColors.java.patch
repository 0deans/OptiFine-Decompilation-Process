--- a/net/optifine/CustomColors.java
+++ b/net/optifine/CustomColors.java
@@ -413,14 +413,14 @@
       String s = "palette.block.";
       Map map = new HashMap();
 
-      for(String s1 : props.keySet()) {
+      for(String s1 : (Set<String>)(Set<?>) props.keySet()) {
          String s2 = props.getProperty(s1);
          if (s1.startsWith(s)) {
             map.put(s1, s2);
          }
       }
 
-      String[] astring = map.keySet().toArray(new String[map.size()]);
+      String[] astring = (String[]) map.keySet().toArray(new String[map.size()]);
 
       for(int j = 0; j < astring.length; ++j) {
          String s6 = astring[j];
@@ -448,7 +448,7 @@
          }
       }
 
-      return list.size() <= 0 ? null : list.toArray(new CustomColormap[list.size()]);
+      return list.size() <= 0 ? null : (CustomColormap[]) list.toArray(new CustomColormap[list.size()]);
    }
 
    private static CustomColormap[][] readBlockColormaps(String[] basePaths, CustomColormap[] basePalettes, int width, int height) {
@@ -509,31 +509,26 @@
    }
 
    private static void addToList(CustomColormap cm, List list, int id) {
-      while(id >= list.size()) {
-         list.add((Object)null);
-      }
-
-      List list = (List)list.get(id);
-      if (list == null) {
-         list = new ArrayList();
-         list.set(id, list);
-      }
-
-      list.add(cm);
+      while (id >= list.size()) {
+         list.add(null);
+      }
+      ArrayList<CustomColormap> subList = (ArrayList<CustomColormap>)list.get(id);
+      if (subList == null) {
+         subList = new ArrayList<CustomColormap>();
+         list.set(id, subList);
+      }
+      subList.add(cm);
    }
 
    private static CustomColormap[][] blockListToArray(List list) {
-      CustomColormap[][] acustomcolormap = new CustomColormap[list.size()][];
-
-      for(int i = 0; i < list.size(); ++i) {
-         List list = (List)list.get(i);
-         if (list != null) {
-            CustomColormap[] acustomcolormap1 = list.toArray(new CustomColormap[list.size()]);
-            acustomcolormap[i] = acustomcolormap1;
-         }
+      CustomColormap[][] colArr = new CustomColormap[list.size()][];
+      for (int i = 0; i < list.size(); ++i) {
+         List subList = (List)list.get(i);
+         if (subList == null) continue;
+         CustomColormap[] subArr = (CustomColormap[]) subList.toArray(new CustomColormap[subList.size()]);
+         colArr[i] = subArr;
       }
-
-      return acustomcolormap;
+      return colArr;
    }
 
    private static int readColor(Properties props, String[] names) {
@@ -1080,10 +1075,10 @@
 
    private static int[] readSpawnEggColors(Properties props, String fileName, String prefix, String logName) {
       List<Integer> list = new ArrayList<>();
-      Set set = props.keySet();
+      Set set =  props.keySet();
       int i = 0;
 
-      for(String s : set) {
+      for(String s : (Set<String>)(Set<?>) set) {
          String s1 = props.getProperty(s);
          if (s.startsWith(prefix)) {
             String s2 = StrUtils.removePrefix(s, prefix);
@@ -1184,7 +1179,7 @@
       float[][] afloat1 = new float[adyecolor.length][];
       int k = 0;
 
-      for(String s : props.keySet()) {
+      for(String s : (Set<String>)(Set<?>) props.keySet()) {
          String s1 = props.getProperty(s);
          if (s.startsWith(prefix)) {
             String s2 = StrUtils.removePrefix(s, prefix);
@@ -1232,7 +1227,7 @@
       Arrays.fill(aint, -1);
       int i = 0;
 
-      for(String s : props.keySet()) {
+      for(String s : (Set<String>)(Set<?>) props.keySet()) {
          String s1 = props.getProperty(s);
          if (s.startsWith(prefix)) {
             String s2 = StrUtils.removePrefix(s, prefix);
@@ -1271,7 +1266,7 @@
       Arrays.fill(aint, -1);
       int i = 0;
 
-      for(String s : props.keySet()) {
+      for(String s : (Set<String>)(Set<?>) props.keySet()) {
          String s1 = props.getProperty(s);
          if (s.startsWith(prefix)) {
             String s2 = StrUtils.removePrefix(s, prefix);
@@ -1299,7 +1294,7 @@
       Arrays.fill(aint, -1);
       int i = 0;
 
-      for(String s : props.keySet()) {
+      for(String s : (Set<String>)(Set<?>) props.keySet()) {
          String s1 = props.getProperty(s);
          if (s.startsWith(prefix)) {
             int j = getPotionId(s);
