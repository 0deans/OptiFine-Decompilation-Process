--- a/net/minecraft/network/syncher/SynchedEntityData.java
+++ b/net/minecraft/network/syncher/SynchedEntityData.java
@@ -114,7 +114,7 @@
       synchronized(this.lock) {
          SynchedEntityData.DataItem<T> dataitem;
          try {
-            dataitem = this.itemsById.get(pKey.getId());
+            dataitem = (SynchedEntityData.DataItem<T>) this.itemsById.get(pKey.getId());
          } catch (Throwable throwable) {
             CrashReport crashreport = CrashReport.forThrowable(throwable, "Getting synched entity data");
             CrashReportCategory crashreportcategory = crashreport.addCategory("Synched entity data");
@@ -211,7 +211,7 @@
       if (!Objects.equals(pEntry.serializer(), pTarget.accessor.getSerializer())) {
          throw new IllegalStateException(String.format(Locale.ROOT, "Invalid entity data item type for field %d on entity %s: old=%s(%s), new=%s(%s)", pTarget.accessor.getId(), this.entity, pTarget.value, pTarget.value.getClass(), pEntry.value, pEntry.value.getClass()));
       } else {
-         pTarget.setValue(pEntry.value);
+         pTarget.setValue((T) pEntry.value);
       }
    }
 
@@ -261,9 +261,6 @@
    }
 
    public static record DataValue<T>(int id, EntityDataSerializer<T> serializer, T value) {
-      private final int id;
-      private final EntityDataSerializer<T> serializer;
-      private final T value;
 
       public static <T> SynchedEntityData.DataValue<T> create(EntityDataAccessor<T> pDataAccessor, T pValue) {
          EntityDataSerializer<T> entitydataserializer = pDataAccessor.getSerializer();
