--- a/net/optifine/util/NativeMemory.java
+++ b/net/optifine/util/NativeMemory.java
@@ -91,7 +91,7 @@
          Class oclass = Class.forName(path[0]);
          Method method = oclass.getMethod(path[1]);
          method.setAccessible(true);
-         final Object object = null;
+         Object object = null;
 
          for(int i = 2; i < path.length; ++i) {
             String s = path[i];
@@ -101,6 +101,7 @@
          }
 
          final Method method1 = method;
+         Object finalObject = object;
          return new LongSupplier() {
             private boolean disabled = false;
 
@@ -109,7 +110,7 @@
                   return -1L;
                } else {
                   try {
-                     return method1.invoke(object);
+                     return (long) method1.invoke(finalObject);
                   } catch (Throwable throwable) {
                      Config.warn("(Reflector) " + throwable.getClass().getName() + ": " + throwable.getMessage());
                      this.disabled = true;
