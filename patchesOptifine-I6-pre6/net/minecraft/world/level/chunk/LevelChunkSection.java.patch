--- a/net/minecraft/world/level/chunk/LevelChunkSection.java
+++ b/net/minecraft/world/level/chunk/LevelChunkSection.java
@@ -107,11 +107,11 @@
    }
 
    public void recalcBlockCounts() {
-      LevelChunkSection$1BlockCounter levelchunksection$1blockcounter = new LevelChunkSection$1BlockCounter(this);
-      this.states.count(levelchunksection$1blockcounter);
-      this.nonEmptyBlockCount = (short)levelchunksection$1blockcounter.nonEmptyBlockCount;
-      this.tickingBlockCount = (short)levelchunksection$1blockcounter.tickingBlockCount;
-      this.tickingFluidCount = (short)levelchunksection$1blockcounter.tickingFluidCount;
+      BlockCounter blockcounter = new BlockCounter();
+      this.states.count(blockcounter);
+      this.nonEmptyBlockCount = (short)blockcounter.nonEmptyBlockCount;
+      this.tickingBlockCount = (short)blockcounter.tickingBlockCount;
+      this.tickingFluidCount = (short)blockcounter.tickingFluidCount;
    }
 
    public PalettedContainer<BlockState> getStates() {
@@ -171,5 +171,30 @@
 
    public short getBlockRefCount() {
       return this.nonEmptyBlockCount;
+   }
+
+   static class BlockCounter implements PalettedContainer.CountConsumer<BlockState> {
+      public int nonEmptyBlockCount;
+      public int tickingBlockCount;
+      public int tickingFluidCount;
+
+
+      public void accept(BlockState p_204444_, int p_204445_) {
+         FluidState fluidstate = p_204444_.getFluidState();
+         if (!p_204444_.isAir()) {
+            this.nonEmptyBlockCount += p_204445_;
+            if (p_204444_.isRandomlyTicking()) {
+               this.tickingBlockCount += p_204445_;
+            }
+         }
+
+         if (!fluidstate.isEmpty()) {
+            this.nonEmptyBlockCount += p_204445_;
+            if (fluidstate.isRandomlyTicking()) {
+               this.tickingFluidCount += p_204445_;
+            }
+         }
+
+      }
    }
 }
