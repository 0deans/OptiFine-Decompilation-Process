--- a/net/optifine/TextureAnimation.java
+++ b/net/optifine/TextureAnimation.java
@@ -157,27 +157,27 @@
    }
 
    private void updateTextureInerpolate(TextureAnimationFrame frame1, TextureAnimationFrame frame2, double k) {
-      int i = this.frameWidth * this.frameHeight * 4;
-      int j = i * frame1.index;
-      if (j + i <= this.imageData.limit()) {
-         int k = i * frame2.index;
-         if (k + i <= this.imageData.limit()) {
-            this.interpolateData.clear();
-
-            for(int l = 0; l < i; ++l) {
-               int i1 = this.imageData.get(j + l) & 255;
-               int j1 = this.imageData.get(k + l) & 255;
-               int k1 = this.mix(i1, j1, k);
-               byte b0 = (byte)k1;
-               this.interpolateData.put(b0);
-            }
-
-            this.interpolateData.flip();
-            GlStateManager._bindTexture(this.dstTextId);
-            TextureUtils.resetDataUnpacking();
-            GL11.glTexSubImage2D(3553, 0, this.dstX, this.dstY, this.frameWidth, this.frameHeight, 6408, 5121, this.interpolateData);
-         }
-      }
+      int frameLen = this.frameWidth * this.frameHeight * 4;
+      int offset1 = frameLen * frame1.index;
+      if (offset1 + frameLen > this.imageData.limit()) {
+         return;
+      }
+      int offset2 = frameLen * frame2.index;
+      if (offset2 + frameLen > this.imageData.limit()) {
+         return;
+      }
+      this.interpolateData.clear();
+      for (int i = 0; i < frameLen; ++i) {
+         int c1 = this.imageData.get(offset1 + i) & 0xFF;
+         int c2 = this.imageData.get(offset2 + i) & 0xFF;
+         int c = this.mix(c1, c2, k);
+         byte b = (byte)c;
+         this.interpolateData.put(b);
+      }
+      this.interpolateData.flip();
+      GlStateManager._bindTexture(this.dstTextId);
+      TextureUtils.resetDataUnpacking();
+      GL11.glTexSubImage2D((int)3553, (int)0, (int)this.dstX, (int)this.dstY, (int)this.frameWidth, (int)this.frameHeight, (int)6408, (int)5121, (ByteBuffer)this.interpolateData);
    }
 
    private int mix(int col1, int col2, double k) {
